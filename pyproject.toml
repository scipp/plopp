[build-system]
requires = [
  "setuptools>=77",
  "setuptools_scm[toml]>=8.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "plopp"
description = "Visualization library for Scipp"
authors = [{ name = "Scipp contributors" }]
license = "BSD-3-Clause"
license-files = ["LICENSE"]
readme = "README.md"
classifiers = [
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Typing :: Typed",
]
requires-python = ">=3.10"

# IMPORTANT:
# Run 'tox -e deps' after making changes here. This will update requirement files.
# Make sure to list one dependency per line.
dependencies = [
  "lazy-loader>=0.4",
  "matplotlib>=3.8",
]

dynamic = ["version"]

[project.optional-dependencies]
scipp = ["scipp>=25.5.0"]
all = ["scipp>=25.5.0", "ipympl>0.8.4", "pythreejs>=2.4.1", "mpltoolbox>=24.6.0", "ipywidgets>=8.1.0", "graphviz>=0.20.3"]
test = [
    "graphviz>=0.20.3",
    "h5py>=3.12",
    "ipympl>=0.8.4",
    "ipywidgets>=8.1.0",
    "mpltoolbox>=24.6.0",
    "pandas>=2.2.2",
    "plotly>=5.15.0",
    "pooch>=1.5",
    "pyarrow>=10.0.0",
    "pytest>=7.0",
    "pythreejs>=2.4.1",
    "scipp>=25.5.0",
    "scipy>=1.10.0",
    "xarray>=v2024.05.0",
    "anywidget>=0.9.0"
]

[project.urls]
"Bug Tracker" = "https://github.com/scipp/plopp/issues"
"Documentation" = "https://scipp.github.io/plopp"
"Source" = "https://github.com/scipp/plopp"

[tool.setuptools_scm]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = """
--strict-config
--strict-markers
--import-mode=importlib
-ra
-v
"""
testpaths = "tests"
filterwarnings = [
  "error",
  'ignore:\n            Sentinel is not a public part of the traitlets API:DeprecationWarning',
  'ignore:Passing unrecognized arguments to super:DeprecationWarning',
  'ignore:Jupyter is migrating its paths:DeprecationWarning',
  'ignore:setDaemon\(\) is deprecated, set the daemon attribute instead:DeprecationWarning',
  'ignore:There is no current event loop:DeprecationWarning',
  # Should be removed once https://github.com/ipython/ipykernel/pull/1248 is released
  'ignore:Parsing dates involving a day of month without a year:DeprecationWarning',
  # Should be removed once we lower pin a matplotlib version that respects the deprecation
  'ignore:.*parameter is deprecated and will be removed in Pillow 13.*:DeprecationWarning',
]

[tool.ruff]
line-length = 88
extend-include = ["*.ipynb"]
extend-exclude = [
    ".*", "__pycache__", "build", "dist", "install",
]

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules/
select = ["B", "C4", "DTZ", "E", "F", "G", "I", "PERF", "PGH", "PT", "PYI", "RUF", "S", "T20", "UP", "W"]
ignore = [
    # Conflict with ruff format, see
    # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "COM812", "COM819", "D206", "D300", "E111", "E114", "E117", "ISC001", "ISC002", "Q000", "Q001", "Q002", "Q003", "W191",
]
fixable = ["B010", "I001", "PT001", "RUF022"]
isort.known-first-party = ["plopp"]
pydocstyle.convention = "numpy"

[tool.ruff.lint.per-file-ignores]
# those files have an increased risk of relying on import order
"tests/*" = [
    "S101",  # asserts are fine in tests
    "B018",  # 'useless expressions' are ok because some tests just check for exceptions
]
"*.ipynb" = [
    "E501",  # longer lines are sometimes more readable
    "E741",  # the fonts in Jupyter and Sphinx makes these chars distinguishable
    "F403",  # *-imports used with domain types
    "F405",  # linter may fail to find names because of *-imports
    "I",  # we don't collect imports at the top
    "S101",  # asserts are used for demonstration and are safe in notebooks
    "T201",  # printing is ok for demonstration purposes
]

[tool.ruff.format]
quote-style = "preserve"

[tool.mypy]
strict = true
ignore_missing_imports = true
enable_error_code = [
    "ignore-without-code",
    "redundant-expr",
    "truthy-bool",
]
warn_unreachable = true

[tool.codespell]
ignore-words-list = [
    # Codespell wants "socioeconomic" which seems to be the standard spelling.
    # But we use the word in our code of conduct which is the contributor covenant.
    # Let's not modify it if we don't have to.
    "socio-economic",
]
