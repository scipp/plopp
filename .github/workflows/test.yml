name: Test

on:
  workflow_dispatch:
    inputs:
      os-variant:
        default: 'ubuntu-22.04'
        type: string
      python-version:
        type: string
      tox-env:
        default: 'test'
        type: string
      pip-recipe:
        default: 'requirements/ci.txt'
        type: string
      coverage-report:
        default: false
        type: boolean
      checkout_ref:
        default: ''
        type: string
      playwright-trace-report:
        default: false
        type: boolean
  workflow_call:
    inputs:
      os-variant:
        default: 'ubuntu-22.04'
        type: string
      python-version:
        type: string
      tox-env:
        default: 'test'
        type: string
      pip-recipe:
        default: 'requirements/ci.txt'
        type: string
      coverage-report:
        default: false
        type: boolean
      checkout_ref:
        default: ''
        type: string
      playwright-trace-report:
        default: false
        type: boolean

jobs:
  package-test:
    runs-on: ${{ inputs.os-variant }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkout_ref }}
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - run: python -m pip install --upgrade pip
      - run: python -m pip install .[scipp]
      - run: python tests/package_test.py
        name: Run package tests

  test:
    runs-on: ${{ inputs.os-variant }}
    env:
        ESS_PROTECTED_FILESTORE_USERNAME: ${{ secrets.ESS_PROTECTED_FILESTORE_USERNAME }}
        ESS_PROTECTED_FILESTORE_PASSWORD: ${{ secrets.ESS_PROTECTED_FILESTORE_PASSWORD }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkout_ref }}
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - run: python -m pip install --upgrade pip
      - run: python -m pip install -r ${{ inputs.pip-recipe }}
      - run: tox -e ${{ inputs.tox-env }}
      - uses: actions/upload-artifact@v4
        if: ${{ inputs.coverage-report }}
        with:
          name: CoverageReport
          path: coverage_html/

  browser-test:
    runs-on: ${{ inputs.os-variant }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkout_ref }}
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - run: python -m pip install --upgrade pip
      - run: pip install -r requirements/test.txt
      - run: pip install pytest-playwright==0.6.2
      - run: pip install -e .
      - run: playwright install firefox --with-deps # Install a browser
      - run: nohup jupyter lab --NotebookApp.token='' --NotebookApp.password='' --no-browser &  # Start a JupyterLab server
      - run: pytest tests/widgets/playwright_test.py --browser firefox
